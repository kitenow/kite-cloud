service: helloworld

frameworkVersion: "2"

custom:
  env: ${file(./env/${opt:stage,'local'}.json)}
  prune:
    automatic: true
    number: 3
  warmup:
    officeHoursWarmer:
      enabled: true
      events:
        - schedule: cron(0/5 8-17 ? * MON-FRI *)
      concurrency: 10
    outOfOfficeHoursWarmer:
      enabled: true
      events:
        - schedule: cron(0/5 0-7 ? * MON-FRI *)
        - schedule: cron(0/5 18-23 ? * MON-FRI *)
        - schedule: cron(0/5 * ? * SAT-SUN *)
      concurrency: 1
    testWarmer:


#package:
#  exclude:
#    - node_modules/**

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: ap-southeast-1
  memorySize: 256
  environment:
    DB_CONSTRING: ${self:custom.env.DB_CONSTRING}
    REDIS_HOST: ${self:custom.env.REDIS_HOST}
    REDIS_PORT: ${self:custom.env.REDIS_PORT}
    REDIS_PW: ${self:custom.env.REDIS_PW}
    #NODE_PATH: "./:/opt/node_modules"  

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello/get
          method: get
          cors: true

  func01:
    handler: ./functions/func03.func03
    events:
      - http:
          path: func01/get
          method: get
          cors: true

  func02:
    handler: ./functions/func03.func03
    events:
      - http:
          path: func02/get
          method: get
          cors: true

  func03:
    handler: ./functions/func03.func03
    events:
      - http:
          path: func03/get
          method: get
          cors: true


plugins:
  - serverless-offline
  - serverless-prune-plugin
  #- serverless-layers
  - serverless-plugin-warmup
